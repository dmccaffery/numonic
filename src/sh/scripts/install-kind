#! /usr/bin/env sh

set -e

__numonic_kind_install() {

	version="latest"

	while :; do
		case $1 in
			-d|--debug)
				debug=1
				;;
			-f|--force)
				if [ -f "${NUMONIC_BIN}"/kind ]; then
					rm -f "${NUMONIC_BIN}"/kind 1>/dev/null
				fi

				if command -v kind 1>/dev/null 2>&1; then
					print-fail "install-kind: kind is already on the path at: $(command -v kind)" \
						'This version was not installed using numonic.' \
						'Please remove using the package manager that was used to install it.'
					return 1
				fi
				;;
			-h|--help)
				man install-tflint
				return 0
				;;
			-q|--quiet)
				quiet=1
				;;
			-v|--version)
				version="v${2#v*}"
				shift
				;;
			?*)
				print-fail "install-kind: too many arguments, argument: ${1} is unexpected"
				man install-kind | cat 1>&2
				return 1
				;;
			*)
				break
				;;
		esac
		shift
	done

	if command -v kind 1>/dev/null 2>&1; then
		print-warn "install-kind: kind is already on the path at: $(command -v kind)" \
			'to reinstall, use the --force flag'
		return 1
	fi

	(
		if [ -n "${quiet:-}" ]; then
			exec 1>/dev/null
		fi

		if [ -n "${debug:-}" ]; then
			set -x
		fi

		platform=$(uname | tr '[:upper:]' '[:lower:]')
		architecture=$(uname -m)

		if [ "${architecture}" = "x86_64" ]; then
			architecture="amd64"
		elif [ "${architecture}" = "aarch64" ]; then
			architecture="arm64"
		fi

		url="https://kind.sigs.k8s.io/dl/${version}/kind-${platform}-${architecture}"

		print-success '' \
			'INSTALL KIND' \
			"platform: ${platform}\${architecture}" \
			"url     : ${url}" \
			"output  : ${NUMONIC_BIN}/kind" \
		''

		print-success "install-kind: downloading kind..."

		download-safe "${url}" "${NUMONIC_BIN}/kind"
		chmod +x "${NUMONIC_BIN}"/kind

		# setup tab completion
		kind completion bash > "${BASH_COMPLETION_DIR}"/kind.inc
		kind completion zsh > "${ZSH_COMPLETION_DIR}"/_kind

		# shellcheck disable=SC2016
		print-warn '' \
			'install-kind: start a new shell to enable tab completion...' \
			'exec $SHELL -l'
	)
}

__numonic_kind_install "$@"
