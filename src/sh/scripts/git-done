#! /usr/bin/env sh

set -e

__numonic_git_done() {

	branch=
	origin=
	upstream="upstream"

	while :; do
		case $1 in
			-dr|--dry-run)
				dry_run=1
				;;
			-d|--debug)
				debug=1
				;;
			-b|--branch)
				branch="${2}"
				shift
				;;
			--branch=*)
				branch="${1#*=}"
				;;
			-r|-o|--remote|--origin)
				origin="${2}"
				shift
				;;
			--remote=*|--origin=*)
				origin="${1#*=}"
				;;
			-u|--upstream)
				upstream="${2}"
				shift
				;;
			--upstream=*)
				upstream="${1#*=}"
				;;
			-h|--help)
				man git-done
				return 0
				;;
			?*)
				if [ -z "${branch:-}" ]; then
					branch="${1}"
				elif [ -z "${remote:-}" ]; then
					remote="${1}"
				else
					print-fail "git done: too many arguments, argument: ${1} is unexpected"
					man git-done | cat 1>&2
					return 1
				fi
				;;
			*)
				break
				;;
		esac
		shift
	done

    if [ -z "${origin:-}" ]; then
        origin="origin"
    fi

	for current in "${branch}" develop next main master; do
		if git show-ref --quiet --verify "refs/heads/${current}"; then
			branch="${current}"
			break
		fi
	done

	main=

	for current in "${branch}" develop next main master; do
		if git show-ref --quiet --verify "refs/remotes/${upstream}/${current}"; then
			main="${current}"
			break
		fi
	done

	if [ -z "${main:-}" ]; then
		upstream=
	fi

	print-warn '' \
		'GIT DONE' \
		'' \
		'ORIGIN INFO' \
		"remote : ${origin}" \
		"branch : ${branch}" \
		'' \
		'UPSTREAM INFO' \
		"remote : ${upstream:-"n/a"}" \
		"branch : ${main:-"n/a"}" \
	''

	if [ -n "${dry_run:-}" ]; then
		return 0
	fi

	(
		if [ -n "${debug:-}" ]; then
			set -x
		fi

		git checkout --recurse-submodules "${branch}"
		git-update
		git-delete-merged --remote="${origin}" --branch="${branch}"
		git-remote-prune --remote="${origin}"
		git-delete-gone --remote="${origin}"

		# determine if we are on a fork
		if [ -n "${main:-}" ]; then
			git-remote-prune --remote="${upstream}"
			git pull --all
			git merge --ff-only "${upstream}/${main}"
			git push "${origin}" "${branch}"
		fi
	)
}

__numonic_git_done "$@"
