#! /usr/bin/env sh

set -e

__numonic_use_shell() {

	numonic_shell=${numonic_shell:-${1:-zsh}}
	install_dir="${NUMONIC_HOME}"/"${numonic_shell}"/install

	if [ -z "${numonic_shell:-}" ]; then
		print-fail "numonic: you must specify a shell to use, either sh, bash, or zsh."
		return 1
	fi

	found=

	# iterate over each uname
	for current in $(print-unames); do

		# get the uname install path
		uname_path="${install_dir}"/"${current}".sh

		# determine if an installer for the uname does not exist
		if [ -f "${uname_path}" ]; then
			# we found at least one installer
			found=1

			# print success
			print-success "numonic: installing prerequisites for ${numonic_shell}: ${current}"

			# break from the loop
			break
		fi
	done

	# determine if we did not find any installer
	if [ -z "${found:-}" ]; then

		print-fail "numonic: shell cannot be installed on this platform."
		print-warn "Please open an issue to request support for this distribution."
		return 1
	fi

	if command -v /opt/homebrew/bin/brew 1>/dev/null 2>&1; then
		eval "$(/opt/homebrew/bin/brew shellenv)"
	elif command -v brew 1>/dev/null 2>&1; then
		eval "$(brew shellenv)"
	else
		if [ -d "${LOCALAPPDATA}"/git ]; then
			LOCAL_PREFIX=$(printf "%s" "/${LOCALAPPDATA}/git" | sed -e 's/\\/\//g' -e 's/://')
		elif [ -d /usr/local ]; then
			LOCAL_PREFIX=/usr/local
		else
			LOCAL_PREFIX="${NUMONIC_LOCAL}"
		fi
		export LOCAL_PREFIX

		if [ -d "${LOCAL_PREFIX}"/bin ]; then
			export PATH="${LOCAL_PREFIX}/bin:${PATH}"
		fi
	fi

	# run the installer
	. "${uname_path}"

	if command -v /opt/homebrew/bin/"${numonic_shell}" 1>/dev/null 2>&1; then
		numonic_shell_path=/opt/homebrew/bin/"${numonic_shell}"
	elif command -v /usr/local/bin/"${numonic_shell}" 1>/dev/null 2>&1; then
		numonic_shell_path=/usr/local/bin/"${numonic_shell}"
	elif command -v /home/linuxbrew/.linuxbrew/bin/"${numonic_shell}" 1>/dev/null 2>&1; then
		numonic_shell_path=/home/linuxbrew/.linuxbrew/bin/"${numonic_shell}"
	elif command -v "${numonic_shell}" 1>/dev/null 2>&1; then
		numonic_shell_path=$(command -v "${numonic_shell}")
	else
		print-fail "numonic: shell cannot be installed on this platform."
		print-warn "Please open an issue to request support for this distribution."
		return 1
	fi

	# determine if the shell path is not already defined in /etc/shells
	if ! grep "${numonic_shell_path}" /etc/shells 1>/dev/null 2>&1; then

		if [ -n "${NUMONIC_NO_DEPENDENCIES:-}" ]; then
			print-fail '' \
				"numonic: shell ${numonic_shell_path} not enabled for user shells and --no-dependencies was set" \
				"please add ${numonic_shell_path} to /etc/shells and try again" \
			''
		fi

		sudo_cmd=$(command -v sudo || printf '')

		# add the shell path
		print-success "numonic: adding updated ${numonic_shell} to shells..."
		${sudo_cmd} sh -c "printf '%s\n' \"${numonic_shell_path}\" >> /etc/shells"
	fi

	if [ "${SHELL}" != "${numonic_shell_path}" ]; then
		print-success "numonic: setting ${numonic_shell_path} to default shell for user..."
		chsh -s "${numonic_shell_path}"
	fi

	# set the shell in home
	printf '%s' "${numonic_shell_path}" > "${HOME}"/.local/numonic/.shell

	# shellcheck disable=SC2016
	print-success '' \
		'##############################################################################' \
		'##############################################################################' \
		'' \
		'NOTE: to take advantage of the symbols used by the shell, please set the' \
		'      the terminal font to `FiraCode Nerd Font Mono`. If you are using' \
		'      either macOS terminal or gnome terminal, you can do this automatically' \
		'      by loading a `theme`.' \
		'' \
		'PLEASE RUN THE FOLLOWING TO START USING THE NEW SHELL:' \
		'' \
		"exec ${numonic_shell_path} -l" \
		'' \
		'##############################################################################' \
		'##############################################################################' \
	''
}

__numonic_use_shell "$@"
