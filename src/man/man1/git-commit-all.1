.TH "GIT-COMMIT-ALL" "1" "January 2, 2022" "Numonic v1.0.0" "Numonic Manual"
.nh \" Turn off hyphenation by default.
.SH NAME
.PP
git-commit-all - create a commit including all new, removed, or modified files within the working tree
.SH SYNOPSIS
.PP
\f[B]git\f[R] \f[B]commit-all\f[R] [\f[B]-m\f[R] <message>] [\f[B]-d\f[R] | \f[B]--debug\f[R]] [\f[B]-h\f[R] |
\f[B]--help\f[R]] [\f[B]-q\f[R] | \f[B]--quiet\f[R]] \f[B]git\f[R] \f[B]commit-all\f[R] [\f[B]--message=\f[R]<message>]
[\f[B]-d\f[R] | \f[B]--debug\f[R]] [\f[B]-h\f[R] | \f[B]--help\f[R]] [\f[B]-q\f[R] | \f[B]--quiet\f[R]]
.SH DESCRIPTION
.PP
This command updates the index using all content found within the working tree excluding those defined in a
\f[B].gitignore\f[R] file.
If a tty is available, then the commit will be opened in an editor regardless of whether or not a message is specified.
This is designed to support review, especially since all commit-related numonic commands include a sign-off.
.PP
This command is essentially equivalent to:
.IP
.nf
\f[C]
git add --all
git commit --edit --signoff --message=\[rs]<message\[rs]>
\f[R]
.fi
.SH OPTIONS
.SS FLAGS
.SS -d, --debug
.PP
print the commands as they are executed (set -x)
.SS -h, --help
.PP
print this help information
.SS -q, --quiet
.PP
suppress any output to stdout (any errors will still be printed)
.SS ARGUMENTS
.SS -m <message>, --message=<message>
.PP
the message of the commit
.SH EXAMPLES
.SS git commit-all
.PP
track all files within the repository, excluding those defined in the .gitignore
.SS git commit-all -d
.SS git commit-all --debug
.PP
track all files within the repository, excluding those defined in the .gitignore and print the underlying git commands
as they are executed
.SH SEE ALSO
.PP
\f[B]git-commit\f[R](1), \f[B]git-add\f[R](1), \f[B]gitignore\f[R](5)
.SH AUTHORS
Deavon M. McCaffery
